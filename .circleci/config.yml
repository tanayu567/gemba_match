version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
           BUNDLER_VERSION: 2.2.2
           RAILS_ENV: 'test'
      
      - image: circleci/mysql:5.7
        environment:
           MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
           MYSQL_ROOT_HOST: '%'

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.2.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml 

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn Install
          command: yarn install --ignore-engines
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
          - .yarn-cache

# rubocopを走らせる記述です。
      - run:
          name: Rubocop
          command: bundle exec rubocop --fail-level W --display-only-fail-level-offenses

# rspecを走らせる記述です。
      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)" 
              
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
              
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

# Herokuへデプロイする記述です。
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: "c2:db:84:03:3e:30:94:ee:b0:8d:e6:91:58:a6:4d:71"
      # - run:
      #     name: Heroku への master のデプロイ
      #     command: |
      #       git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:

      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
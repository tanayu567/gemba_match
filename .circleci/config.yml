# version: 2.1
# orbs:
#   ruby: circleci/ruby@0.1.2 

# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:2.6.3-stretch-node
#     executor: ruby/default
#     steps:
#       - checkout
#       - run:
#           name: Which bundler?
#           command: bundle -v
#       - ruby/bundle-install

version: 2
jobs: # 今回は 2 つのジョブを用意し、ワークフロー機能でジョブの調整を行います
  one: # 1 つ目のジョブ
    docker: # Docker Executor を使用します
      - image: circleci/ruby:2.4.1 # Ruby 2.4.1 を含む Docker イメージを指定します
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # コンテキスト/プロジェクト UI 環境変数の参照
    # ステップは、上記の Docker コンテナ内で実行するコマンドのリストです
    steps:
      - checkout # GitHub からコードをプルします
      - run: echo "A first hello" # "A first hello" を stdout に出力します
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
        root: my_workspace
        paths:
            - echo-output  
      
  two: # 2 つ目のジョブ
    docker: # 前述と同様に Docker イメージ内で実行します
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # コンテキスト/プロジェクト UI 環境変数の参照
    steps:
      - checkout
      - run: echo "A more familiar hi" # 前述のコマンドに類似した echo コマンドを実行します
      - attach_workspace:
        at: my_workspace
        
      - run: |
          if [[ $(cat my_workspace/echo-output) == "Trying out workspaces" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi  
# workflows 以下でマッピングを行い、上記で定義した 2 つのジョブを調整します
workflows:
  version: 2
  one_and_two: # ワークフローの名前
    jobs: # 実行するジョブをここにリストします
      - one
      - two:
        requires:
            - one
